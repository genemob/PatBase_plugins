/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package patmob.patbase;

import java.util.ArrayList;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONObject;
import org.patmob.core.HttpClient;
import patmob.util.CredentialsDialog;

/**
 *
 * @author Piotr
 */
public class MethodDemo extends javax.swing.JFrame {
    HttpGet httpGet;

    /**
     * Creates new form MethodDemo
     * @param patmobProxy
     */
    public MethodDemo(String patmobProxy) {
        initComponents();
        jTable1.getColumn("Parameter").setMaxWidth(100);
//        jTextArea1.setText(PatbaseRestClient.initialize(patmobProxy, 
//                "piotr.masiakowski@sanofi.com", "ip4638"));
        
        String[] creds = CredentialsDialog.getCredentials();
        jTextArea1.setText(PatbaseRestApi.initialize(patmobProxy, 
                creds[0], creds[1]));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PatBase REST API Method Demo");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Login", "GetWeek", "GetMonth", "Query", "SearchResults", "SearchResultsBIB", "SearchResultsFN", "GetRecord", "GetMember", "GetFamily", "ListPrivateFolders", "GetPrivateFolder", "GetPNLegalStatus", "GetFamilyLegalStatus", "GetFamilyBackCitations", "GetFamilyForwardCitations", "GetPNBackCitations", "GetPNForwardCitations", "GetPNNPLCitations", "GetNonLatinMT" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectedIndex(0);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Execute Method");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Parameter", "Value"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3)))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (jList1.getSelectedIndex()==-1 || jList1.getSelectedIndex()==0) {
                jButton1.setEnabled(false);
            } else {
                jButton1.setEnabled(true);
                jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    getParamArray(jList1.getSelectedValue().toString()),
                    new String [] {
                        "Parameter", "Value"
                    }
                ));                
            }
            jTable1.getColumn("Parameter").setMaxWidth(100);
        }
    }//GEN-LAST:event_jList1ValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ArrayList<NameValuePair> params = new ArrayList<>();
        
        if (jList1.getSelectedIndex()>0) {
            //Login method at index 0 run in constructor
            try {
                //get params from user
                for (int tableRow=0; tableRow<4; tableRow++) {
                    if (jTable1.getModel().getValueAt(tableRow, 0)!=null &&
                            jTable1.getModel().getValueAt(tableRow, 1)!=null) {
                        params.add(new BasicNameValuePair(
                                jTable1.getModel().getValueAt(tableRow, 0).toString(), 
                                jTable1.getModel().getValueAt(tableRow, 1).toString()));
                    }
                }

                httpGet = new HttpGet(PatbaseRestApi.getUri(
                        jList1.getSelectedValue().toString(),
                        params.toArray(new NameValuePair[0])));
                //interesting import!!
                CloseableHttpClient httpclient = HttpClient.getInstance();
                HttpResponse httpResponse = httpclient.execute(httpGet);
                JSONObject jOb = PatbaseRestApi.getResponseData(httpResponse);
                jTextArea1.setText(jOb.toString(4));
            } catch (Exception x) {
                System.out.println("Execute method: " + x);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private Object[][] getParamArray(String selValue) {
        Object[][] paramArray = new Object [][] {
            {null, null},
            {null, null},
            {null, null},
            {null, null}
        };
        
        switch (selValue) {
            case "Login":
                //Login run in constructor
            case "GetWeek":
            case "GetMonth":
            case "ListPrivateFolders":
                //no param methods
                break;
            case "Query":
                paramArray = new Object [][] {
                    {"query", null},
                    {null, null},
                    {null, null},
                    {null, null}
                };
                break;
            case "SearchResults":
            case "SearchResultsBIB":
            case "SearchResultsFN":
                paramArray = new Object [][] {
                    {"querykey", null},
                    {"sortorder", null},
                    {"from", null},
                    {"to", null}
                };
                break;
            case "GetRecord":
            case "GetFamily":
            case "GetFamilyLegalStatus":
            case "GetFamilyBackCitations":
            case "GetFamilyForwardCitations":
                paramArray = new Object [][] {
                    {"family", null},
                    {null, null},
                    {null, null},
                    {null, null}
                };
                break;
            case "GetMember":
                paramArray = new Object [][] {
                    {"pn", null},
                    {"kd", null},
                    {"ft", null},
                    {"legal", null}
                };
                break;
            case "GetPrivateFolder":
                paramArray = new Object [][] {
                    {"foldername", null},
                    {null, null},
                    {null, null},
                    {null, null}
                };
                break;
            case "GetPNLegalStatus":
            case "GetPNBackCitations":
            case "GetPNForwardCitations":
            case "GetPNNPLCitations":
            case "GetNonLatinMT":
                paramArray = new Object [][] {
                    {"pn", null},
                    {"kd", null},
                    {null, null},
                    {null, null}
                };
        }
        
        return paramArray;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MethodDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MethodDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MethodDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MethodDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MethodDemo(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
